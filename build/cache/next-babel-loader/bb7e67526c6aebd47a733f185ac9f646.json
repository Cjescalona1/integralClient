{"ast":null,"code":"import countries from \"../../assets/countries\";\nimport { useState, useEffect } from \"react\";\nimport { Label, Table, Spinner, Alert } from \"reactstrap\";\nimport ReactPaginate from 'react-paginate';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nlet countr = countries.countries;\nlet URL = \" \";\nexport default function TrendFetch() {\n  const {\n    0: trendL,\n    1: setTrendL\n  } = useState();\n  const {\n    0: band,\n    1: setBand\n  } = useState(false);\n\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: currentItems && /*#__PURE__*/_jsxs(Table, {\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsxs(\"tr\", {\n            children: [\" \", /*#__PURE__*/_jsx(\"th\", {\n              children: \"Tendencia\"\n            }), \"  \", /*#__PURE__*/_jsx(\"th\", {\n              children: \"Volumen de tendencia\"\n            }), \" \", /*#__PURE__*/_jsx(\"th\", {\n              children: \"Exportar\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: currentItems.map((element, index) => /*#__PURE__*/_jsxs(\"tr\", {\n            children: [\" \", /*#__PURE__*/_jsx(\"td\", {\n              children: element.name\n            }), \" \", /*#__PURE__*/_jsx(\"td\", {\n              children: element.tweet_volume\n            }), \" \", /*#__PURE__*/_jsxs(\"td\", {\n              children: [/*#__PURE__*/_jsx(\"button\", {\n                className: \"migButton\",\n                onClick: () => console.log(element.name),\n                disabled: true,\n                children: \"Exportar \"\n              }), \" \"]\n            })]\n          }, index))\n        })]\n      })\n    });\n  } ////\n\n\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    // We start with an empty list of items.\n    const {\n      0: currentItems,\n      1: setCurrentItems\n    } = useState(null);\n    const {\n      0: pageCount,\n      1: setPageCount\n    } = useState(0); // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n\n    const {\n      0: itemOffset,\n      1: setItemOffset\n    } = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(trendL.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(trendL.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % trendL.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Items, {\n        currentItems: currentItems\n      }), /*#__PURE__*/_jsx(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null,\n        breakClassName: 'page-item',\n        breakLinkClassName: 'page-link',\n        containerClassName: 'pagination',\n        pageClassName: 'page-item',\n        pageLinkClassName: 'page-link',\n        previousClassName: 'page-item',\n        previousLinkClassName: 'page-link',\n        nextClassName: 'page-item',\n        nextLinkClassName: 'page-link',\n        activeClassName: 'active'\n      })]\n    });\n  } ////\n\n\n  function call(e) {\n    fetchCall(countr[e.target.value]);\n  }\n\n  async function fetchCall(v) {\n    if (v != undefined) {\n      URL = `http://localhost:9000/countryFetch?`;\n      URL = URL + `lat=${v.latlng[0]}`;\n      URL = URL + `&long=${v.latlng[1]}`;\n      console.log(URL);\n      await fetch(URL, {\n        method: 'get'\n      }).then(res => res.json()).then(res => getTrends(res[0]));\n    }\n  }\n\n  async function getTrends(v2) {\n    setBand(true);\n    let url2 = \"http://localhost:9000/trendListFetch\";\n    url2 = url2 + `?id=${v2.woeid}`;\n    await fetch(url2, {\n      method: 'get'\n    }).then(res => res.json()).then(res => setTrendL(res[0].trends));\n    setBand(false);\n  }\n\n  trendL ? console.log(trendL) : console.log(\"not yet\");\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"Consulta de tendencias\"\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Consulta asociada referente a las tendencias disponibles para un pais en especifico\", /*#__PURE__*/_jsx(\"br\", {}), \"se debera elegir el pais a consultar para el cual se mostraran los \", /*#__PURE__*/_jsx(\"b\", {\n          children: \"TRENDING TOPICS\"\n        }), \" en el momento de la consulta \", /*#__PURE__*/_jsx(\"br\", {}), \"estos podran ser consultados de manera individual para posteriormente ser migrados para su mejor manejo.\"]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxs(Label, {\n          children: [\" \", /*#__PURE__*/_jsx(\"h5\", {\n            children: \"Pais\"\n          }), \" \"]\n        }), \" \", /*#__PURE__*/_jsx(\"br\", {})]\n      }), /*#__PURE__*/_jsxs(\"select\", {\n        onChange: e => {\n          call(e);\n        },\n        children: [/*#__PURE__*/_jsx(\"option\", {}), countr.map((a, index) => /*#__PURE__*/_jsx(\"option\", {\n          value: index,\n          children: a.name\n        }, index))]\n      }), trendL ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(PaginatedItems, {\n          itemsPerPage: 10\n        })\n      }) : /*#__PURE__*/_jsx(_Fragment, {\n        children: band ? /*#__PURE__*/_jsx(Spinner, {\n          children: \"Loading...\"\n        }) : /*#__PURE__*/_jsx(_Fragment, {})\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}