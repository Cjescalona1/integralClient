{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { FormGroup, Input, Button, Table, Spinner, Label, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CsvDownload from 'react-json-to-csv';\nimport ReactPaginate from 'react-paginate';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Content() {\n  const {\n    0: list,\n    1: setlist\n  } = useState('');\n  const {\n    0: data,\n    1: setdata\n  } = useState('');\n  const {\n    0: bodyVal,\n    1: setBodyVal\n  } = useState({\n    query: \"\"\n  });\n  const {\n    0: band,\n    1: setBand\n  } = useState(false);\n  let URL = \" \";\n\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: currentItems && /*#__PURE__*/_jsxs(Table, {\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsxs(\"tr\", {\n            children: [\" \", /*#__PURE__*/_jsx(\"th\", {\n              children: \"Usuario\"\n            }), \" \", /*#__PURE__*/_jsx(\"th\", {\n              children: \"Tweet\"\n            }), \" \"]\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: currentItems.map((element, index) => /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"td\", {\n              children: element.user\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: element.tweet\n            })]\n          }, index))\n        })]\n      })\n    });\n  }\n\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    // We start with an empty list of items.\n    const {\n      0: currentItems,\n      1: setCurrentItems\n    } = useState(null);\n    const {\n      0: pageCount,\n      1: setPageCount\n    } = useState(0); // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n\n    const {\n      0: itemOffset,\n      1: setItemOffset\n    } = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(list.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(list.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % list.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Items, {\n        currentItems: currentItems\n      }), /*#__PURE__*/_jsx(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null,\n        breakClassName: 'page-item',\n        breakLinkClassName: 'page-link',\n        containerClassName: 'pagination',\n        pageClassName: 'page-item',\n        pageLinkClassName: 'page-link',\n        previousClassName: 'page-item',\n        previousLinkClassName: 'page-link',\n        nextClassName: 'page-item',\n        nextLinkClassName: 'page-link',\n        activeClassName: 'active'\n      })]\n    });\n  }\n\n  function change(inp) {\n    setdata(inp);\n    let aux = {\n      query: inp\n    };\n    setBodyVal(aux);\n  }\n\n  function buildList(val) {\n    let auxVal = val.data;\n    let auxUser = val.includes.users;\n    let ret = [];\n\n    if (auxVal != undefined) {\n      auxVal.map((v, index) => {\n        let par = {\n          user: '',\n          tweet: ''\n        };\n        par.tweet = v.text;\n        auxUser.map(u => {\n          if (v.author_id == u.id) {\n            par.user = u.name;\n          }\n        });\n        ret.push(par);\n      });\n      setlist(ret);\n    }\n  }\n\n  async function fetchCall() {\n    setBand(true);\n    URL = `http://localhost:9000/basicFetch?`;\n    URL = URL + `query=${bodyVal.query}`;\n    await fetch(URL, {\n      method: 'post'\n    }).then(res => res.json()).then(res => buildList(res)).catch(e => console.log(e));\n    setBand(false);\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"Consulta Basica\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"Consulta basica asociada a la palabra o el conjunto de palabras sugerido en la busqueda.\"\n      }), /*#__PURE__*/_jsx(\"form\", {\n        children: /*#__PURE__*/_jsxs(FormGroup, {\n          children: [/*#__PURE__*/_jsxs(Label, {\n            className: \"mt-2\",\n            children: [\" \", /*#__PURE__*/_jsx(\"h5\", {\n              children: \" Valores de Consuta \"\n            }), \" \"]\n          }), /*#__PURE__*/_jsx(Input, {\n            value: data,\n            onChange: e => {\n              change(e.target.value);\n            },\n            children: \" \"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxs(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsx(Button, {\n                disabled: band,\n                onClick: () => {\n                  fetchCall();\n                },\n                children: \"Buscar\"\n              }), list && /*#__PURE__*/_jsx(CsvDownload, {\n                data: list,\n                className: \"migButton\",\n                children: \" Migrar\"\n              })]\n            })\n          }), list ? /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(PaginatedItems, {\n              itemsPerPage: 10,\n              className: \"center\"\n            })\n          }) : /*#__PURE__*/_jsx(_Fragment, {\n            children: band ? /*#__PURE__*/_jsx(Spinner, {\n              children: \"Loading...\"\n            }) : /*#__PURE__*/_jsx(_Fragment, {})\n          })]\n        })\n      })]\n    })\n  });\n}\n;","map":null,"metadata":{},"sourceType":"module"}